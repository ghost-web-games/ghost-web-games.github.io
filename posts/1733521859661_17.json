{
  "title": "Three.js 기본 개념",
  "date": 1733521859656,
  "data": "{\n  \"time\": 1733521859656,\n  \"blocks\": [\n    {\n      \"id\": \"q8RQK3bdW_\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"Three.js란 무엇인가?\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"rLgbg4cdnC\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js는 WebGL을 기반으로 동작하는 JavaScript 3D 라이브러리입니다. WebGL은 브라우저에서 GPU를 활용해 고성능 3D 그래픽을 그릴 수 있도록 해주는 기술이지만, 다루기 어렵고 복잡한 API를 제공합니다.Three.js는 WebGL의 복잡함을 추상화하여 개발자들이 직관적이고 간단하게 3D 그래픽을 구현할 수 있도록 돕습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"D9Mk7WbGJd\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js의 주요 특징:\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"XWk3tQtcOq\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"경량화된 코드로 빠르게 로드\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"다양한 기하학적 도형 및 재질 지원\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"광원, 그림자, 물리효과 등 풍부한 기능\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"WebGL뿐 아니라 Canvas, SVG 렌더링도 가능\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"oW9tVLPGBC\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"WebGL과 Three.js의 관계\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"sUJjW2_1Ve\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"WebGL은 웹 브라우저 내에서 OpenGL과 비슷한 그래픽 API를 제공합니다. 하지만 WebGL은 다음과 같은 단점이 있습니다:\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"h19yGt2hZ0\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"복잡한 셰이더 코드 작성 필요\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"초기 설정 및 렌더링 과정이 길고 까다로움\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"-RBCQKTCiA\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js는 이를 해결하기 위해 다음과 같은 역할을 합니다:\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"AVxwQGsbBG\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"WebGL의 복잡성 제거Three.js는 셰이더와 렌더링 초기화 과정을 자동화합니다.\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"사용자 친화적인 API 제공3D 객체를 생성하고 조작하는 기능을 간단한 코드로 구현할 수 있습니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"yOCkB6tXHs\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"Three.js의 주요 구성 요소\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"CDd0yxYtut\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js를 이용해 3D 장면을 만들려면 다음 세 가지 핵심 구성 요소를 이해해야 합니다:\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"k9XYI7bpw8\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"Scene (장면)\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"wOjZLtVIuy\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Scene은 3D 객체와 카메라, 조명 등 모든 요소가 배치되는 가상의 공간입니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"8CNyW-tJ1B\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const scene = new THREE.Scene();\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"22Eqozab4R\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"start\": 2,\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"Camera (카메라)\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"aDrHGv0-oa\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"카메라는 사용자가 3D 공간을 볼 수 있도록 시점을 정의합니다. Three.js는 두 가지 주요 카메라를 지원합니다:\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"oybHV8r5xi\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"PerspectiveCamera: 원근감을 적용한 카메라로, 현실적인 장면 구현에 사용됩니다.\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"OrthographicCamera: 평행 투영 카메라로, 2D 스타일이나 특수 장면에 적합합니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"KxxNF8PNg-\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\\ncamera.position.z = 5; // 카메라 위치 설정\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"kv2XL1o_9T\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"start\": 3,\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"Renderer (렌더러)\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"Em5i2yRQbw\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Renderer는 Scene과 Camera를 기반으로 최종 이미지를 생성하여 브라우저에 표시합니다.Three.js는 기본적으로 WebGLRenderer를 사용합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"eFRZ2PEsQ8\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const renderer = new THREE.WebGLRenderer();\\nrenderer.setSize(window.innerWidth, window.innerHeight); // 캔버스 크기 설정\\ndocument.body.appendChild(renderer.domElement); // DOM에 캔버스 추가\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"LYwfK_LXAP\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"Three.js의 기본 사용 구조\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"7RVhPLwQqE\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js를 활용한 기본 코드는 아래와 같은 순서로 작성됩니다:\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"zxnoxgS4xe\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"장면, 카메라, 렌더러 생성\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"aulD3tVwkq\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const scene = new THREE.Scene();\\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\\nconst renderer = new THREE.WebGLRenderer();\\nrenderer.setSize(window.innerWidth, window.innerHeight);\\ndocument.body.appendChild(renderer.domElement);\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"6zcUd8Ny4w\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"start\": 2,\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"3D 객체 생성 및 추가\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"0jTX-sFgGF\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const geometry = new THREE.BoxGeometry(); // 박스 형태\\nconst material = new THREE.MeshBasicMaterial({ color: 0x00ff00 }); // 초록색\\nconst cube = new THREE.Mesh(geometry, material); // 메쉬 생성\\nscene.add(cube); // 장면에 추가\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"4ve1ekxlM1\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"start\": 3,\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"애니메이션 루프\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"cU-bTcm1Jt\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function animate() {\\n    requestAnimationFrame(animate);\\n    cube.rotation.x += 0.01; // 박스 회전\\n    cube.rotation.y += 0.01;\\n    renderer.render(scene, camera); // 장면 렌더링\\n}\\nanimate();\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"iVUg2YvhnT\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"주요 Three.js 구성 요소의 확장\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"Du1K8afkls\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js는 위의 기본 구성 외에도 풍부한 확장 기능을 제공합니다:\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"K59Vd720g7\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"Light (조명): 다양한 조명 효과로 장면을 생생하게 만듦\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"Material (재질): Texture, Bump Map 등으로 세밀한 표현 가능\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"Loader (로더): 외부 모델(GLTF, OBJ 등)을 쉽게 가져오기\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"Control (제어): OrbitControls를 사용해 카메라 이동 제어\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"13axlOR_G1\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"실습: 간단한 3D 장면 만들기\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"HXSBIN9M_U\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"목표: 회전하는 박스를 화면에 표시\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"hxTqHqUgSA\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"import * as THREE from \\\"https://esm.sh/three\\\";\\nimport { OrbitControls } from 'https://esm.sh/three/examples/jsm/controls/OrbitControls.js';\\n// 장면\\nconst scene = new THREE.Scene();\\n\\n// 카메라\\nconst camera = new THREE.PerspectiveCamera(\\n  75, window.innerWidth / window.innerHeight, 0.1, 1000\\n);\\ncamera.position.z = 5;\\n\\n// 렌더러\\nconst renderer = new THREE.WebGLRenderer();\\nrenderer.setSize(window.innerWidth, window.innerHeight);\\ndocument.body.appendChild(renderer.domElement);\\n\\nconst controls = new OrbitControls(camera, renderer.domElement);\\n// 박스 객체 생성\\nconst geometry = new THREE.BoxGeometry();\\nconst material = new THREE.MeshLambertMaterial({ color: 0x44aa88 });\\nconst cube = new THREE.Mesh(geometry, material);\\nscene.add(cube);\\n\\n// 조명 추가\\nconst light = new THREE.DirectionalLight(0xffffff, 1);\\nlight.position.set(-1, 2, 4);\\nscene.add(light);\\n\\n// 애니메이션 루프\\nfunction animate() {\\n  cube.rotation.x += 0.01;\\n  cube.rotation.y += 0.01;\\n  renderer.render(scene, camera);\\n  requestAnimationFrame(animate);\\n}\\nanimate();\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"DT0UIeePTW\",\n      \"type\": \"embed\",\n      \"data\": {\n        \"service\": \"codepen\",\n        \"source\": \"https://codepen.io/ghostwebservice/pen/bNbVEWY\",\n        \"embed\": \"https://codepen.io/ghostwebservice/embed/bNbVEWY?height=300&theme-id=0&default-tab=css,result&embed-version=2\",\n        \"width\": 600,\n        \"height\": 300,\n        \"caption\": \"회전하는 도형\"\n      }\n    }\n  ],\n  \"version\": \"2.30.7\"\n}",
  "id": "1733521859661_17"
}