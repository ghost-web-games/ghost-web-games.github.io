{
  "title": "Three.js 필수 기초",
  "date": 1733536704747,
  "data": "{\n  \"time\": 1733536704745,\n  \"blocks\": [\n    {\n      \"id\": \"L-hpstTXlj\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \" Three.js의 기본 구성 요소\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"6zaPq-5-sP\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js는 직관적인 API로 3D 그래픽 작업을 가능하게 합니다. 본 장에서는 Three.js로 게임을 만들기 위해 알아야 할 필수 구성 요소와 주요 개념을 상세히 설명합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"wFuEnS_YWq\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"Scene(장면)\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"2sGASuJBKS\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Scene은 3D 공간에서 모든 객체가 배치되는 기본 컨테이너입니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"xSv7jG4R5a\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"장면은 카메라와 빛, 3D 모델 등 모든 객체를 포함합니다.\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"장면은 렌더러를 통해 카메라 관점에서 렌더링됩니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"72ZHJKqRfC\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"장면 생성 코드 예제:\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"6Z3CVSVDnT\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const scene = new THREE.Scene();\\nscene.background = new THREE.Color(0x87ceeb); // 하늘색 배경\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"e9gKkwnkDs\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Scene에 추가 가능한 요소:\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"aNuizBP-6D\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"Mesh(메쉬): 기하학적 도형\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"Light(조명): 광원\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"Camera(카메라): 관찰 위치\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"82Wa6yfMs-\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"Camera(카메라)\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"0oE3MLy-q6\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Camera는 사용자가 3D 장면을 보는 시점을 정의합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"gfYIxA6Fvy\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"주요 카메라 종류\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"zx4KQAzhgi\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"PerspectiveCamera (원근 투영 카메라)\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"gqveUm57oL\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"실제 인간의 눈처럼 원근감을 제공합니다. 게임 개발에서 가장 널리 사용됩니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"KDKCJRupC_\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\\ncamera.position.set(0, 1, 5); // 카메라 위치 설정\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"15KcM2YQvL\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"start\": 2,\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"OrthographicCamera (직교 투영 카메라)\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"FLnW3Zvljl\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"원근감 없이 모든 물체를 동일한 크기로 표시합니다.2D 게임이나 UI 요소 구현에 사용됩니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"DtW6Kq8dah\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"카메라 제어\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"cz1DNa1lV2\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"OrbitControls를 사용하면 카메라를 마우스로 이동/회전/확대할 수 있습니다\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"p4h1W52sna\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\\nconst controls = new OrbitControls(camera, renderer.domElement);\\ncontrols.enableDamping = true; // 부드러운 움직임\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"WGMK5zM3kE\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \" Renderer(렌더러)\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"HQ24jTlqsa\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Renderer는 Scene과 Camera를 기반으로 화면에 최종 이미지를 출력하는 역할을 합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"sQHRubw7FR\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"WebGLRenderer\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"CO-iA71soB\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js의 기본 렌더러로, GPU를 사용해 고성능 그래픽을 제공합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"-z6G7A_Zd6\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const renderer = new THREE.WebGLRenderer();\\nrenderer.setSize(window.innerWidth, window.innerHeight); // 화면 크기 설정\\ndocument.body.appendChild(renderer.domElement); // DOM에 추가\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"IynYuoJ62V\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"Renderer의 주요 옵션\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"gMPjC87khX\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"antialias: 계단 현상을 줄이기 위한 옵션\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"ix2ZJQas2z\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const renderer = new THREE.WebGLRenderer({ antialias: true });\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"igZ95o6t9r\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"setPixelRatio: 고해상도 화면에서 선명한 렌더링을 위해 사용\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"2m3R3WdWbW\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"renderer.setPixelRatio(window.devicePixelRatio);\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"qB6VS9reZy\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"Geometry(기하학적 도형)\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"YfiGKs3cdx\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Geometry는 3D 모델의 형태를 정의합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"esyXsrc7hY\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"기본 Geometry 종류\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"w5LLsh56JB\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"BoxGeometry (박스)\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"SphereGeometry (구체)\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"PlaneGeometry (평면)\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"KBVoWkqOnj\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const box = new THREE.BoxGeometry(1, 1, 1); // 가로, 세로, 깊이\\nconst sphere = new THREE.SphereGeometry(1, 32, 32); // 반지름, 가로/세로 분할 수\\nconst plane = new THREE.PlaneGeometry(5, 5); // 가로, 세로\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"ObUicdX7W_\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"Custom Geometry (사용자 정의 도형)\",\n            \"meta\": {},\n            \"items\": [\n              {\n                \"content\": \"사용자 정의 점과 면을 사용하여 고유의 도형을 생성할 수 있습니다.\",\n                \"meta\": {},\n                \"items\": []\n              }\n            ]\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"tZJDaCef25\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const geometry = new THREE.BufferGeometry();\\nconst vertices = new Float32Array([\\n    0, 0, 0, // 첫 번째 점\\n    1, 0, 0, // 두 번째 점\\n    0, 1, 0  // 세 번째 점\\n]);\\ngeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"JkNUJ3dE0t\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"Material(재질)\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"LCwTiG1kce\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Material은 Geometry에 적용되어 표면의 색상, 질감, 광택 등을 정의합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"Ng5S3fZ26Q\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"주요 Material 종류\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"bOWP8xEv83\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"MeshBasicMaterial\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"yCENBnXu4C\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"조명을 받지 않고 색상만 표현합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"pZmxCo6XKA\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"LCi5zCWt35\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"start\": 2,\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"MeshStandardMaterial\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"qS56R0B3ra\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"조명 효과와 함께 PBR(물리 기반 렌더링)을 지원합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"b9IfYfi7X8\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const material = new THREE.MeshStandardMaterial({\\n    color: 0xff0000,\\n    metalness: 0.5,\\n    roughness: 0.5,\\n});\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"AxYEscexkH\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"start\": 3,\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"MeshLambertMaterial\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"SLDBjKxbts\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"부드러운 조명 효과를 표현합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"D_aenOrVxI\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const material = new THREE.MeshLambertMaterial({ color: 0x0000ff });\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"c--J5jlc7O\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"Texture(텍스처)\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"S98uV3xFx2\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Material에 텍스처 이미지를 적용할 수 있습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"7Ortp7uBci\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const textureLoader = new THREE.TextureLoader();\\nconst texture = textureLoader.load('path/to/texture.jpg');\\nconst material = new THREE.MeshStandardMaterial({ map: texture });\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"a_4h4TuVx-\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \" Light(조명)\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"3phtV5-C4b\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Light는 Scene에서 3D 객체를 조명하여 현실감을 더합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"qGXFPdRoyp\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"주요 Light 종류\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"VO9ieecJto\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"AmbientLight (환경광)\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"SlQB9xMZbY\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Scene 전체를 균일하게 밝게 만듭니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"1FX4DMItUz\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const ambientLight = new THREE.AmbientLight(0xffffff, 0.5); // 색상, 강도\\nscene.add(ambientLight);\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"nBbBg-M0UJ\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"start\": 2,\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"PointLight (점광원)\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"5oyN4c77XV\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"특정 지점에서 빛을 방출하며, 그림자를 생성합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"KedKIn-SDt\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const pointLight = new THREE.PointLight(0xffffff, 1, 10); // 색상, 강도, 거리\\npointLight.position.set(1, 2, 3);\\nscene.add(pointLight);\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"QfKlcN9Xar\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"start\": 3,\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"DirectionalLight (직사광)\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"4pbNcGeBeB\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"태양광처럼 평행하게 빛을 비춥니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"A4xkgIWZZP\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\\ndirectionalLight.position.set(5, 10, 7.5);\\nscene.add(directionalLight);\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"O3Lm-HsVAv\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"Animation(애니메이션)\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"qwwT_vEQUa\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js는 장면을 동적으로 업데이트하기 위한 애니메이션 루프를 제공합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"85cjnnXAis\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"기본 애니메이션 코드\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"-JIB1oQ2IB\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function animate() {\\n    requestAnimationFrame(animate);\\n    cube.rotation.x += 0.01; // 회전\\n    cube.rotation.y += 0.01;\\n    renderer.render(scene, camera); // 장면 렌더링\\n}\\nanimate();\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"QeX2KoQvMm\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"Clock을 사용한 애니메이션\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"_PPSoEc85p\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"THREE.Clock를 사용하면 프레임 간 시간 차이를 기반으로 애니메이션을 제어할 수 있습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"fT5eT0vQkE\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const clock = new THREE.Clock();\\n\\nfunction animate() {\\n    const delta = clock.getDelta(); // 이전 프레임과의 시간 차이\\n    cube.rotation.x += delta * 1.0; // 시간 기반 회전\\n    renderer.render(scene, camera);\\n    requestAnimationFrame(animate);\\n}\\nanimate();\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"K4wWg8qI6P\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"실습: 간단한 장면 만들기\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"Z_t4T-AcuU\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"목표: 조명, 메쉬, 텍스처를 사용해 회전하는 정육면체를 렌더링\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"zDbIfnACMI\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"iimport * as THREE from \\\"https://esm.sh/three\\\";\\nimport { OrbitControls } from 'https://esm.sh/three/examples/jsm/controls/OrbitControls.js';\\n// 장면\\nconst scene = new THREE.Scene();\\n\\n// 카메라\\nconst camera = new THREE.PerspectiveCamera(\\n  75, window.innerWidth / window.innerHeight, 0.1, 1000\\n);\\ncamera.position.z = 5;\\n\\n// 렌더러\\nconst renderer = new THREE.WebGLRenderer();\\nrenderer.setSize(window.innerWidth, window.innerHeight);\\ndocument.body.appendChild(renderer.domElement);\\n\\nconst controls = new OrbitControls(camera, renderer.domElement);\\n// 박스 객체 생성\\nconst geometry = new THREE.BoxGeometry();\\nconst textureLoader = new THREE.TextureLoader();\\nconst texture = textureLoader.load('https://cdn.rawgit.com/mrdoob/three.js/5a24dac5/examples/textures/crate.gif');\\n\\nconst material = new THREE.MeshBasicMaterial({ map: texture });\\nconst cube = new THREE.Mesh(geometry, material);\\nscene.add(cube);\\n\\n// 조명 추가\\nconst light = new THREE.DirectionalLight(0xffffff, 1);\\nlight.position.set(-1, 2, 4);\\nscene.add(light);\\n\\n// 애니메이션 루프\\nfunction animate() {\\n  cube.rotation.x += 0.01;\\n  cube.rotation.y += 0.01;\\n  renderer.render(scene, camera);\\n  requestAnimationFrame(animate);\\n}\\nanimate();\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"gMemV8yLn_\",\n      \"type\": \"embed\",\n      \"data\": {\n        \"service\": \"codepen\",\n        \"source\": \"https://codepen.io/ghostwebservice/pen/bNbVEoa\",\n        \"embed\": \"https://codepen.io/ghostwebservice/embed/bNbVEoa?height=300&theme-id=0&default-tab=css,result&embed-version=2\",\n        \"width\": 600,\n        \"height\": 300,\n        \"caption\": \"회전하는 상자\"\n      }\n    }\n  ],\n  \"version\": \"2.30.7\"\n}",
  "id": "1733536704899_19"
}