{
  "title": "프로젝트 확장: 성장형 게임 시스템 만들기",
  "date": 1734151460925,
  "data": "{\n  \"time\": 1734818452891,\n  \"blocks\": [\n    {\n      \"id\": \"ySNYymJI1w\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"1 레벨 시스템: 난이도 조정\",\n        \"level\": 3\n      }\n    },\n    {\n      \"id\": \"s7AYPyU2dy\",\n      \"type\": \"image\",\n      \"data\": {\n        \"caption\": \"장애물과 적을 피해 목표인 파란 상자까지 가는 것이 이 게임의 규칙입니다.\",\n        \"withBorder\": false,\n        \"withBackground\": false,\n        \"stretched\": false,\n        \"file\": {\n          \"url\": \"uploads/Screenshot_20241222_070006_Chrome.jpg\"\n        }\n      }\n    },\n    {\n      \"id\": \"MMNmju68zy\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"목표\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"qReUQ9Fzxm\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"게임의 난이도를 점진적으로 조정하며, 플레이어와 AI 에이전트 모두 성장할 수 있는 환경을 제공합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"UMZTmXCV3N\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"상세 내용\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"lBcore4iiv\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"레벨 시스템 설계레벨이 증가함에 따라 게임 환경의 복잡도를 높입니다.장애물 수 증가.목표 위치를 더 멀리 배치.적 캐릭터 추가.레벨별 속성 정의:\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"v4RThzJIqY\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const levels = [\\n    { obstacles: 3, goalDistance: 5, enemySpeed: 0 },\\n    { obstacles: 5, goalDistance: 10, enemySpeed: 1 },\\n    { obstacles: 8, goalDistance: 15, enemySpeed: 2 }\\n];\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"o1LvvG64Iz\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"2. 난이도 조정 로직\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"dY6gNZD0Oe\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"레벨이 오를수록 더 많은 장애물을 생성하고, 목표 위치를 더 복잡하게 배치합니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"7r26s5oUuU\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function generateLevel(levelIndex) {\\n    const level = levels[levelIndex];\\n    const obstacles = [];\\n    for (let i = 0; i < level.obstacles; i++) {\\n        obstacles.push({\\n            x: Math.random() * level.goalDistance - level.goalDistance / 2,\\n            y: Math.random() * level.goalDistance - level.goalDistance / 2\\n        });\\n    }\\n    return { obstacles, goalDistance: level.goalDistance, enemySpeed: level.enemySpeed };\\n}\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"qRfCucTusM\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"3. 레벨 업 로직\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"IG3W4hBw4E\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"에이전트가 목표에 도달하면 보상을 지급하고 다음 레벨로 이동합니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"z2VEfYBRsc\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function checkLevelCompletion(agent, exitPosition, levelIndex) {\\n    if (agent.position.x === exitPosition.x && agent.position.y === exitPosition.y) {\\n        console.log(`Level ${levelIndex + 1} completed!`);\\n        return true;\\n    }\\n    return false;\\n}\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"ZOUWMyp0vr\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"2 에이전트의 스킬 학습과 능력 향상\",\n        \"level\": 3\n      }\n    },\n    {\n      \"id\": \"espLFuaIAc\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"목표\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"Jr_Z8RdOAL\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"에이전트가 학습과 성장 과정을 통해 새로운 스킬을 획득하거나 성능을 향상시키는 메커니즘을 제공합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"s3Du10B-l_\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"상세 내용\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"a6GUISHCTY\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"스킬 시스템 구현에이전트가 학습을 통해 특정 스킬(속도 향상, 장애물 피하기 등)을 획득합니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"PgmoHlFm1v\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const skills = {\\n    speedBoost: { unlocked: false, effect: () => { agent.speed += 0.5; } },\\n    obstacleAvoidance: { unlocked: false, effect: () => { agent.avoidObstacles = true; } }\\n};\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"qM2ssgfwYu\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"스킬 잠금 해제 조건을 설정합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"n82WZstyMO\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"특정 레벨 이상 달성.\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"일정량의 보상 포인트 획득.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"RU2UlnSpMR\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function unlockSkill(skillName) {\\n    if (!skills[skillName].unlocked) {\\n        skills[skillName].unlocked = true;\\n        skills[skillName].effect();\\n        console.log(`${skillName} unlocked!`);\\n    }\\n}\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"0k5D0D0INN\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"2. 스킬의 게임 적용\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"gGNoc8B_V4\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"스킬이 적용될 때 에이전트의 행동에 영향을 줍니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"Zd9kqJ83kp\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function applySkills(agent) {\\n    if (skills.speedBoost.unlocked) agent.speed += 0.5;\\n    if (skills.obstacleAvoidance.unlocked) {\\n        // 장애물 회피 로직\\n    }\\n}\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"lLf6yBJCD1\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"3 적 캐릭터의 AI 추가\",\n        \"level\": 3\n      }\n    },\n    {\n      \"id\": \"ltzoLn-Mqm\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"목표\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"2mecWqE6do\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"적 캐릭터를 추가하여 에이전트가 회피하거나 전략적으로 대응할 수 있는 환경을 만듭니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"CsHXcTfcoX\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"상세 내용\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"TH53mWdXIY\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"적 캐릭터 생성적 캐릭터를 생성하고 Three.js 장면에 추가합니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"7CP0N13uJk\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function createEnemy() {\\n    const enemy = new THREE.Mesh(\\n        new THREE.SphereGeometry(0.5, 16, 16),\\n        new THREE.MeshBasicMaterial({ color: 0xff0000 })\\n    );\\n    enemy.position.set(Math.random() * 10 - 5, Math.random() * 10 - 5, 0);\\n    return enemy;\\n}\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"02F5U50yxk\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"적 캐릭터의 속성을 정의합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"gqJ89TX3bL\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"이동 속도.\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"공격 범위.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"PUhLkSu3vf\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const enemies = [\\n    { position: { x: 2, y: 2 }, speed: 0.1 },\\n    { position: { x: -3, y: -1 }, speed: 0.2 }\\n];\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"U7dazvORhC\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"2. 적 캐릭터의 AI 동작\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"ubWo77EHlz\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"적 캐릭터가 에이전트를 추적하도록 구현합니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"SW2R7U1-le\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function updateEnemyPosition(enemy, agent) {\\n    const dx = agent.position.x - enemy.position.x;\\n    const dy = agent.position.y - enemy.position.y;\\n    const distance = Math.sqrt(dx * dx + dy * dy);\\n    enemy.position.x += (dx / distance) * enemy.speed;\\n    enemy.position.y += (dy / distance) * enemy.speed;\\n}\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"ahlkQdi7tQ\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"특정 거리 내에서 에이전트를 공격하거나 속도를 증가시킵니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"tPN6JYIqPL\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function checkEnemyProximity(enemy, agent) {\\n    const distance = Math.sqrt(\\n        Math.pow(enemy.position.x - agent.position.x, 2) +\\n        Math.pow(enemy.position.y - agent.position.y, 2)\\n    );\\n    if (distance < 1) {\\n        console.log(\\\"Agent hit by enemy!\\\");\\n        return true; // 에이전트가 적에게 피격\\n    }\\n    return false;\\n}\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"R5hDFEEPzb\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"3. Three.js와 통합\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"xXTYPCvxnE\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"animate 함수에서 적 캐릭터의 동작을 갱신합니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"zeUS9r1iUp\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function animate() {\\n    requestAnimationFrame(animate);\\n\\n    enemies.forEach(enemy => {\\n        updateEnemyPosition(enemy, agent);\\n        if (checkEnemyProximity(enemy, agent)) {\\n            console.log(\\\"Game Over\\\");\\n        }\\n    });\\n\\n    renderer.render(scene, camera);\\n}\\nanimate();\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"-UAiO3AJyb\",\n      \"type\": \"embed\",\n      \"data\": {\n        \"service\": \"codepen\",\n        \"source\": \"https://codepen.io/ghostwebservice/pen/PwYbKod\",\n        \"embed\": \"https://codepen.io/ghostwebservice/embed/PwYbKod?height=300&theme-id=0&default-tab=css,result&embed-version=2\",\n        \"width\": 600,\n        \"height\": 300,\n        \"caption\": \"먼저 적을 피하면서 목적지에 가도록 합니다.\"\n      }\n    },\n    {\n      \"id\": \"Ppu6vTyeHk\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"여기서&nbsp;장애물을 추가하고, 에이전트와 적 캐릭터가 장애물을 피하도록 강화학습과 Three.js 환경에 통합하겠습니다. 장애물은 고정된 위치에 배치되며, 장애물을 충돌하지 않도록 에이전트의 보상/패널티를 조정합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"Y1cGOUOlz2\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"1. 장애물 생성 함수: 장애물을 Three.js 장면에 추가하고, 장애물의 좌표를 기록합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"3kAM0JYxe_\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const obstaclePositions = [\\n  { x: 1, y: 2 },\\n  { x: -2, y: -1 },\\n  { x: 3, y: -2 }\\n];\\n\\nconst obstacles = [];\\n\\nfunction createObstacles() {\\n  const obstacleGeometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\\n  const obstacleMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000 });\\n\\n  for (const pos of obstaclePositions) {\\n    const obstacle = new THREE.Mesh(obstacleGeometry, obstacleMaterial);\\n    obstacle.position.set(pos.x, pos.y, 0);\\n    scene.add(obstacle);\\n    obstacles.push(obstacle);\\n  }\\n}\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"JIwCGlW-KK\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"2. 장애물과의 충돌 체크: 에이전트와 적 캐릭터의 위치가 장애물과 가까워지면 충돌로 간주합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"Qk-wkE6sta\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function isCollidingWithObstacle(position) {\\n  return obstaclePositions.some(obstacle => {\\n    const dx = position.x - obstacle.x;\\n    const dy = position.y - obstacle.y;\\n    return Math.sqrt(dx * dx + dy * dy) < 0.5;\\n  });\\n}\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"xzWqLFHZUj\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"3.&nbsp;applyAction 함수 수정: 장애물 충돌 시, 에이전트의 이동을 원위치로 되돌립니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"zEcZtNe1WI\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function applyAction(action) {\\n  const previousPosition = { ...agentPosition }; // 이전 위치 저장\\n\\n  switch (action) {\\n    case 0: agentPosition.y += 0.5; break; // 위로 이동\\n    case 1: agentPosition.y -= 0.5; break; // 아래로 이동\\n    case 2: agentPosition.x -= 0.5; break; // 왼쪽으로 이동\\n    case 3: agentPosition.x += 0.5; break; // 오른쪽으로 이동\\n  }\\n\\n  // 경계 처리\\n  agentPosition.x = Math.max(-5, Math.min(5, agentPosition.x));\\n  agentPosition.y = Math.max(-5, Math.min(5, agentPosition.y));\\n\\n  // 장애물 충돌 처리\\n  if (isCollidingWithObstacle(agentPosition)) {\\n    agentPosition = previousPosition; // 충돌 시 이전 위치로 복귀\\n  }\\n\\n  agent.position.set(agentPosition.x, agentPosition.y, 0);\\n}\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"mJ_mHORO7A\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"4.&nbsp;getReward 함수 수정: 장애물 충돌 시 큰 패널티를 부여합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"ZpmS2gUot5\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function getReward() {\\n  const distanceToGoal = Math.sqrt(\\n    Math.pow(agentPosition.x - goalPosition.x, 2) +\\n    Math.pow(agentPosition.y - goalPosition.y, 2)\\n  );\\n\\n  const distanceToEnemy = Math.sqrt(\\n    Math.pow(agentPosition.x - enemyPosition.x, 2) +\\n    Math.pow(agentPosition.y - enemyPosition.y, 2)\\n  );\\n\\n  if (Math.abs(agentPosition.x - goalPosition.x) < 0.5 &&\\n      Math.abs(agentPosition.y - goalPosition.y) < 0.5) {\\n    agentSkillLevel += 1; // 목표 도달 시 스킬 레벨 증가\\n    return 10 + agentSkillLevel * 2;\\n  }\\n\\n  if (distanceToEnemy < 0.5) {\\n    return -5; // 적과 충돌 시 큰 페널티\\n  }\\n\\n  if (isCollidingWithObstacle(agentPosition)) {\\n    return -3; // 장애물 충돌 시 패널티\\n  }\\n\\n  return -0.1 - distanceToGoal * 0.01; // 일반 이동은 작은 페널티\\n}\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"oGHH9NEQT_\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"5. 게임 초기화 시 장애물 추가: 장애물을 장면에 추가합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"g_359KeQB2\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function resetGame() {\\n  agentPosition = { x: 0, y: 0 };\\n  enemyPosition = { x: -3, y: 3 };\\n\\n  agent.position.set(agentPosition.x, agentPosition.y, 0);\\n  enemy.position.set(enemyPosition.x, enemyPosition.y, 0);\\n\\n  // 장애물 생성\\n  createObstacles();\\n\\n  currentState = getState();\\n  totalReward = 0;\\n  step = 0;\\n}\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"ExV6cT1tC7\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"결과\",\n        \"level\": 3\n      }\n    },\n    {\n      \"id\": \"uMI70jKgoe\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"장애물은 에이전트의 경로를 차단하며, 충돌 시 페널티를 부여합니다.\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"에이전트는 강화학습을 통해 장애물을 피하고 적 캐릭터의 추격을 피하면서 목표에 도달하는 경로를 학습합니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"9FLcieRL4Y\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"장면 구성\",\n        \"level\": 3\n      }\n    },\n    {\n      \"id\": \"MSJus-KOiP\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"적 캐릭터: 빨간색 구체로 표시, 에이전트를 추적.\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"에이전트: 파란색 구체로 표시, 목표를 향해 이동.\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"장애물: 빨간색 박스로 표시, 고정된 위치에 배치.장애\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"ICeyBJHmAG\",\n      \"type\": \"embed\",\n      \"data\": {\n        \"service\": \"codepen\",\n        \"source\": \"https://codepen.io/ghostwebservice/pen/EaYNvWW\",\n        \"embed\": \"https://codepen.io/ghostwebservice/embed/EaYNvWW?height=300&theme-id=0&default-tab=css,result&embed-version=2\",\n        \"width\": 600,\n        \"height\": 300,\n        \"caption\": \"장애물을 피하게 합니다.\"\n      }\n    }\n  ],\n  \"version\": \"2.30.7\"\n}",
  "id": "1734151461001_30"
}