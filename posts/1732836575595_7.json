{
  "title": "Threejs 기본 구조",
  "date": 1732836575976,
  "data": "{\n  \"time\": 1733013937807,\n  \"blocks\": [\n    {\n      \"id\": \"q21hB2zvZf\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"Three.js 설치 및 설정\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"q8qiocksWp\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js를 시작하려면 기본적인 개발 환경 설정이 필요합니다. Three.js는 브라우저 기반으로 작동하기 때문에 HTML, CSS, JavaScript의 기초 지식이 필요합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"huH7hmtL04\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(1) Three.js 설치\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"yQdbELkSZk\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js를 사용하려면 다음 두 가지 방법 중 하나를 선택할 수 있습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"jykr7V0dGr\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"CDN 링크를 이용하기가장 간단한 방법은 CDN(Content Delivery Network)을 사용하는 것입니다. 이 방법은 Three.js 파일을 다운로드하지 않고도 바로 사용할 수 있습니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"FUUHVb03XS\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"<script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r152/three.min.js\\\"></script>\",\n        \"language\": \"html\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"J8ohUWbO8t\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"start\": 2,\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"npm을 이용해 설치하기Node.js 환경에서 작업하는 경우 npm 패키지 관리자를 사용하여 설치할 수 있습니다.bash<span>코드 복사</span>npm install three\\n\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"VCtUGja6N-\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"npm install three\",\n        \"language\": \"bash\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"ptGdhkHIz2\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(2) 프로젝트 기본 구조\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"wd0MiRTh5z\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js 프로젝트를 작성하려면 다음과 같은 기본 파일 구조를 준비하세요.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"tSD8HSqvDQ\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"/my-threejs-project\\n├── index.html\\n├── style.css\\n└── main.js\",\n        \"language\": \"plain\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"FRmjG0BAQE\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"index.html\",\n        \"level\": 6\n      }\n    },\n    {\n      \"id\": \"3ooVWgqvVy\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js는 JavaScript 파일에서 작동하므로 HTML 파일에서 이를 불러와야 합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"Vym03wB3Yc\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <title>Three.js 프로젝트</title>\\n  <link rel=\\\"stylesheet\\\" href=\\\"style.css\\\">\\n</head>\\n<body>\\n  <script src=\\\"main.js\\\"></script>\\n</body>\\n</html>\",\n        \"language\": \"html\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"7h4VBIP0IH\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"style.css\",\n        \"level\": 6\n      }\n    },\n    {\n      \"id\": \"GEgcDjs4PZ\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"파일은 선택사항입니다. 여기서는 캔버스의 크기를 지정합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"Vnv2m5ZnFM\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"body {\\n  margin: 0;\\n  overflow: hidden;\\n}\\ncanvas {\\n  display: block;\\n}\",\n        \"language\": \"css\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"Yvi3L-T7df\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"main.js\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"rIMryC85IX\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js 코드는 이 파일에서 작성합니다. main.js의 자세한 내용은 구조 설명하면서 진행하겠습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"uVdYD7Lc0z\",\n      \"type\": \"delimiter\",\n      \"data\": {\n        \"style\": \"dash\"\n      }\n    },\n    {\n      \"id\": \"BFnyQg2Z0M\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"Three.js의 기본 구조\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"q75QJYPP7Y\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js를 사용하여 3D 장면을 생성하려면 Scene, Camera, Renderer가 필요합니다. 이 세 가지는 모든 Three.js 프로젝트의 핵심 구성 요소입니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"_CfUbHPVDd\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(1) Scene 생성\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"eV2P2OFT5U\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"장면(Scene)은 3D 객체가 배치되는 공간입니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"yxaC7MZEFz\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const scene = new THREE.Scene();\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"l3EaOH5Wpm\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(2) Camera 생성\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"B6EU0yS4qh\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"카메라는 3D 공간을 관찰하는 역할을 합니다. 일반적으로 PerspectiveCamera를 사용합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"wwpsAMgMuo\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const camera = new THREE.PerspectiveCamera(\\n  75,                     // 시야각(FOV)\\n  window.innerWidth / window.innerHeight, // 종횡비\\n  0.1,                    // 근거리 클리핑 평면\\n  1000                    // 원거리 클리핑 평면\\n);\\ncamera.position.z = 5;     // 카메라 위치 설정\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"q29L_gN5PJ\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(3) Renderer 생성\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"_4TepjdZhc\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"렌더러(Renderer)는 장면과 카메라를 조합하여 브라우저에 출력합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"0c5fQC_BEM\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const renderer = new THREE.WebGLRenderer();\\nrenderer.setSize(window.innerWidth, window.innerHeight); // 렌더링 크기 설정\\ndocument.body.appendChild(renderer.domElement);          // 렌더러 캔버스를 HTML에 추가\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"zslE11bjwR\",\n      \"type\": \"delimiter\",\n      \"data\": {\n        \"style\": \"dash\"\n      }\n    },\n    {\n      \"id\": \"d7jkheZxQ0\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"첫 번째 3D 객체 렌더링하기\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"utACWKB5B_\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js의 기본 구조를 이해했다면, 간단한 3D 객체를 추가해보겠습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"4nFnBo3bJy\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(1) 3D 객체 생성\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"UQpzBGppxE\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js는 다양한 3D 형상을 제공합니다. 여기서는 BoxGeometry를 사용하여 큐브를 생성합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"KXxJsXR6XD\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const geometry = new THREE.BoxGeometry();                // 박스 모양 생성\\nconst material = new THREE.MeshBasicMaterial({ color: 0x00ff00 }); // 녹색 기본 재질\\nconst cube = new THREE.Mesh(geometry, material);         // 형상과 재질을 결합한 Mesh 생성\\nscene.add(cube);                                         // 장면에 추가\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"9hIWJRbO_2\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(2) 애니메이션 추가\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"xjnktCXjkI\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js는 requestAnimationFrame을 사용해 애니메이션을 쉽게 구현할 수 있습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"JeAFtKIBtm\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"function animate() {\\n  requestAnimationFrame(animate);  // 다음 프레임 요청\\n  cube.rotation.x += 0.01;         // 큐브를 회전\\n  cube.rotation.y += 0.01;\\n  renderer.render(scene, camera);  // 장면을 렌더링\\n}\\nanimate();\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"IBEqzgF4yq\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"결과 확인\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"7p3HkqFc0M\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"이제 브라우저에서 index.html 파일을 열면 3D 큐브가 회전하는 장면을 확인할 수 있습니다. <br>Three.js의 기본 사용법을 이해한 만큼, 앞으로 더 복잡한 3D 그래픽 작업을 수행할 준비가 되었습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    }\n  ],\n  \"version\": \"2.30.7\"\n}",
  "id": "1732836575595_7"
}