{
  "title": "3. Threejs 기초 다지기",
  "date": 1733117030542,
  "data": "{\n  \"time\": 1733217498440,\n  \"blocks\": [\n    {\n      \"id\": \"eLbE9sBbJA\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js에서 3D 콘텐츠를 제작할 때는 Geometry, Material, Light, Camera 등의 핵심 개념을 이해하는 것이 중요합니다. 이 장에서는 이러한 기본 요소와 함께 3D 환경을 구성하는 방법을 단계적으로 살펴보겠습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"InOUEXVKOP\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"1. Geometry와 Material\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"uFAZzkhKsl\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"3D 객체를 생성하려면 <b>형상(Geometry)</b>과 <b>재질(Material)</b>이 필요합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"kb40LBvVVJ\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"unordered\",\n        \"meta\": {},\n        \"items\": [\n          {\n            \"content\": \"Geometry는 객체의 모양과 구조를 정의합니다.\",\n            \"meta\": {},\n            \"items\": []\n          },\n          {\n            \"content\": \"Material은 객체의 외형(색상, 질감, 반사 등)을 정의합니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"BFq7SzPKAM\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(1) 기본 Geometry 다루기\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"Qcbe7reLcT\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Three.js는 여러 가지 기본 Geometry를 제공합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"lDlcGR3ViM\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"// 박스\\nconst box = new THREE.BoxGeometry(1, 1, 1); \\n// 구\\nconst sphere = new THREE.SphereGeometry(1, 32, 32); \\n// 평면\\nconst plane = new THREE.PlaneGeometry(2, 2); \\n// 원뿔\\nconst cone = new THREE.ConeGeometry(1, 2, 32); \",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"ssxaE0hTuF\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(2) 다양한 Material 사용하기\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"djVrwwRMO5\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"재질은 객체의 표면을 표현하는 중요한 요소입니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"3ozqpnrEzi\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"// 기본 색상 재질\\nconst basicMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000 }); \\n// 램버트 재질(조명 반응)\\nconst lambertMaterial = new THREE.MeshLambertMaterial({ color: 0x00ff00 }); \\n// 퐁 재질(더 강한 광택 효과)\\nconst phongMaterial = new THREE.MeshPhongMaterial({ color: 0x0000ff, shininess: 100 });\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"mDSFEkpGCa\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(3) Geometry와 Material 결합\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"EcTlosks77\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"Geometry와 Material을 결합해 Mesh를 생성하고, 이를 Scene에 추가합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"5DbtP5Bspn\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const cube = new THREE.Mesh(box, phongMaterial);\\nscene.add(cube);\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"yh11HQy8fA\",\n      \"type\": \"embed\",\n      \"data\": {\n        \"service\": \"codepen\",\n        \"source\": \"https://codepen.io/ghostwebservice/pen/JoPYdar\",\n        \"embed\": \"https://codepen.io/ghostwebservice/embed/JoPYdar?height=300&theme-id=0&default-tab=css,result&embed-version=2\",\n        \"width\": 600,\n        \"height\": 300,\n        \"caption\": \"다양한 도형 생성하기\"\n      }\n    },\n    {\n      \"id\": \"YpRPJpMRv5\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"2. 조명(Lighting)\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"E0WhvqXg8B\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"조명은 3D 객체를 더 생동감 있게 만들어 줍니다. Three.js는 다양한 조명 옵션을 제공합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"rXHb-hL32w\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(1) 기본 조명 종류\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"soYL2FQ1ll\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"AmbientLight: 전체적으로 균일한 조명을 제공합니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"yX3QVlw3Rg\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const ambientLight = new THREE.AmbientLight(0xffffff, 0.5); // 색상과 강도\\nscene.add(ambientLight);\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"bLbBvPE4OX\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"start\": 2,\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"DirectionalLight: 한 방향에서 비추는 조명입니다(태양광처럼).\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"FqX8Hy7wHk\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const dirLight = new THREE.DirectionalLight(0xffffff, 1);\\ndirLight.position.set(5, 10, 7.5); // 조명 위치\\nscene.add(dirLight);\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"PffFuWil8W\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"start\": 3,\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"PointLight: 특정 지점에서 모든 방향으로 빛을 방출합니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"UrxJucCbvO\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const pointLight = new THREE.PointLight(0xffffff, 1, 100); // 색상, 강도, 거리\\npointLight.position.set(2, 3, 1);\\nscene.add(pointLight);\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"zXSHk8CABL\",\n      \"type\": \"list\",\n      \"data\": {\n        \"style\": \"ordered\",\n        \"meta\": {\n          \"start\": 4,\n          \"counterType\": \"numeric\"\n        },\n        \"items\": [\n          {\n            \"content\": \"SpotLight: 원뿔 모양으로 빛을 비춥니다.\",\n            \"meta\": {},\n            \"items\": []\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"Axfe5mWKf9\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const spotLight = new THREE.SpotLight(0xffffff, 1);\\nspotLight.position.set(5, 10, 7.5);\\nscene.add(spotLight);\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"_XZPFFXmym\",\n      \"type\": \"embed\",\n      \"data\": {\n        \"service\": \"codepen\",\n        \"source\": \"https://codepen.io/ghostwebservice/pen/ByBojpd\",\n        \"embed\": \"https://codepen.io/ghostwebservice/embed/ByBojpd?height=300&theme-id=0&default-tab=css,result&embed-version=2\",\n        \"width\": 600,\n        \"height\": 300,\n        \"caption\": \"조명을 여러개 생성하여 어두운 부분이 사라졌습니다.\"\n      }\n    },\n    {\n      \"id\": \"RUlnLJOncq\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(2) 그림자 활성화\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"Mg_J8YOIcg\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"조명이 활성화된 상태에서 그림자를 추가하면 장면에 깊이감을 더할 수 있습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"fxIPYQ_jAO\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"renderer.shadowMap.enabled = true; // 그림자 활성화\\ndirLight.castShadow = true;        // 조명에 그림자 기능 추가\\ncube.castShadow = true;            // 객체가 그림자를 투사\\ncube.receiveShadow = true;         // 객체가 그림자를 수신\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"tE2tdb033q\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"3. 카메라(Camera)\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"pDLFFO31Fm\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"카메라는 3D 장면을 관찰하는 역할을 합니다. 적절한 카메라 설정은 시각적인 효과를 크게 향상시킵니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"YBAkIT_bXl\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(1) PerspectiveCamera\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"X3e4ywr-Bd\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"원근감을 표현하는 데 사용됩니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"vpUWbVyqSY\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const camera = new THREE.PerspectiveCamera(\\n  75,                              // 시야각(FOV)\\n  window.innerWidth / window.innerHeight, // 화면 비율\\n  0.1,                             // 근거리 클리핑 평면\\n  1000                             // 원거리 클리핑 평면\\n);\\ncamera.position.set(0, 1, 5);       // 카메라 위치\\nscene.add(camera);\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"jVdqxjruJ6\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(2) OrthographicCamera\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"JrInuJmzu1\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"원근감을 없애고 직교 투영을 사용합니다. 주로 2D 작업이나 기술적 시각화에 적합합니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"4iwSgbSk0K\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"const camera = new THREE.OrthographicCamera(\\n  -2, 2, 2, -2, 0.1, 100\\n);\\ncamera.position.set(0, 1, 5);\\nscene.add(camera);\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"yK0DPl2xCV\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"(3) 카메라 컨트롤 추가\",\n        \"level\": 5\n      }\n    },\n    {\n      \"id\": \"hEIW2-9EBE\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"OrbitControls를 사용하면 마우스를 통해 장면을 자유롭게 탐색할 수 있습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"me_WfJsCuF\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\\nconst controls = new OrbitControls(camera, renderer.domElement);\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"pAbJbpLOt9\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"4. 기본 장면 구성하기\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"x26XyW3bDW\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"위에서 배운 내용을 종합하여 간단한 3D 장면을 만들어보겠습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"0eRe98rSsm\",\n      \"type\": \"code\",\n      \"data\": {\n        \"code\": \"// 장면\\nconst scene = new THREE.Scene();\\n\\n// 카메라\\nconst camera = new THREE.PerspectiveCamera(\\n  75, window.innerWidth / window.innerHeight, 0.1, 1000\\n);\\ncamera.position.z = 5;\\n\\n// 렌더러\\nconst renderer = new THREE.WebGLRenderer();\\nrenderer.setSize(window.innerWidth, window.innerHeight);\\ndocument.body.appendChild(renderer.domElement);\\n\\n// 박스 객체 생성\\nconst geometry = new THREE.BoxGeometry();\\nconst material = new THREE.MeshLambertMaterial({ color: 0x44aa88 });\\nconst cube = new THREE.Mesh(geometry, material);\\nscene.add(cube);\\n\\n// 조명 추가\\nconst light = new THREE.DirectionalLight(0xffffff, 1);\\nlight.position.set(-1, 2, 4);\\nscene.add(light);\\n\\n// 애니메이션 루프\\nfunction animate() {\\n  cube.rotation.x += 0.01;\\n  cube.rotation.y += 0.01;\\n  renderer.render(scene, camera);\\n  requestAnimationFrame(animate);\\n}\\nanimate();\",\n        \"language\": \"javascript\",\n        \"showlinenumbers\": true\n      }\n    },\n    {\n      \"id\": \"TQVdfZKnPc\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"이 코드로 회전하는 박스와 조명이 적용된 기본 3D 장면을 만들 수 있습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    },\n    {\n      \"id\": \"9HiZKOF1oC\",\n      \"type\": \"embed\",\n      \"data\": {\n        \"service\": \"codepen\",\n        \"source\": \"https://codepen.io/ghostwebservice/pen/bNbVEWY\",\n        \"embed\": \"https://codepen.io/ghostwebservice/embed/bNbVEWY?height=300&theme-id=0&default-tab=css,result&embed-version=2\",\n        \"width\": 600,\n        \"height\": 300,\n        \"caption\": \"카메라를 움직여보세요\"\n      }\n    },\n    {\n      \"id\": \"va5cCIvacu\",\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"정리\",\n        \"level\": 4\n      }\n    },\n    {\n      \"id\": \"NQoxZrCxoH\",\n      \"type\": \"paragraph\",\n      \"data\": {\n        \"text\": \"이 장에서는 Three.js의 기본 구성 요소인 Geometry, Material, Lighting, Camera의 사용법을 배웠습니다. 이 기초를 통해 3D 환경을 구축하는 방법을 이해할 수 있었으며, 더 복잡한 장면으로 나아갈 준비를 마쳤습니다. 다음 장에서는 중급 주제를 다루며 상호작용과 애니메이션을 추가하는 방법을 살펴보겠습니다.\"\n      },\n      \"tunes\": {\n        \"textVariant\": \"\"\n      }\n    }\n  ],\n  \"version\": \"2.30.7\"\n}",
  "id": "1733117030553_8"
}